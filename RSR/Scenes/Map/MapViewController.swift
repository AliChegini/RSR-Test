//
//  MapViewController.swift
//  RSR
//
//  Created by Ehsan on 06/03/2020.
//  Copyright (c) 2020 Ali C. All rights reserved.
//
//  This file was generated by Ali Chegini.
//  This is a simplified version of the Clean Swift Xcode Templates so
//  one can apply clean architecture to iOS and Mac projects.
//  For more info visit: http://clean-swift.com
//

import UIKit
import MapKit

protocol MapDisplayable: class {
    func displayCustomPin(viewModel: MapModels.LocateTheUser.ViewModel)
//    func displaySomething(viewModel: MapModels.ViewModel)
    // func to display error can be added here
}

class MapViewController: UIViewController, MapDisplayable, MKMapViewDelegate {
    private lazy var interactor: MapBusinessLogic = MapInteractor(presenter: MapPresenter(viewController: self))
    private lazy var router = MapRouter(viewController: self)
    
    @IBOutlet weak var mapView: MKMapView!
    var pin: CustomAnnotation!
    
    var calloutElements = CustomCalloutViews()
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        mapView.delegate = self
        
        askPermission()
        locateUser()
    }
    
    
    func displayCustomPin(viewModel: MapModels.LocateTheUser.ViewModel) {
        pin = CustomAnnotation(coordinate: viewModel.coordinate, title: viewModel.stringLocation)
        mapView.addAnnotation(pin)
        calloutElements.addressLabel.text = viewModel.stringLocation
        
        // Zooming on annotation
        let span = MKCoordinateSpan(latitudeDelta: 0.01, longitudeDelta: 0.01)
        let region = MKCoordinateRegion(center: viewModel.coordinate, span: span)
        mapView.setRegion(region, animated: true)
        
        mapView.selectAnnotation(pin, animated: true)
    }
    
    
    private func askPermission() {
        let request = MapModels.AskForPermission.Request()
        interactor.askPermission(request: request)
    }
    
    
    private func locateUser() {
        let request = MapModels.LocateTheUser.Request()
        interactor.locateUser(request: request)
    }
    
    
    
    // methods for Custom annotations
    
    func mapView(_ mapView: MKMapView, viewFor annotation: MKAnnotation) -> MKAnnotationView? {
        let annotationView = MKAnnotationView(annotation: pin, reuseIdentifier: "UserLocation")
        annotationView.image = UIImage(named: "marker")
        annotationView.canShowCallout = false
        
        return annotationView
    }
    
    
    func mapView(_ mapView: MKMapView, didSelect view: MKAnnotationView) {
        calloutElements.setupViews(view: view)
    }

}
